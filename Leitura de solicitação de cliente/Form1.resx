<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>